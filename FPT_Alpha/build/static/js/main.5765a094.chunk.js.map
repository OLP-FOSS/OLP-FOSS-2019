{"version":3,"sources":["components/commom/header.js","constants/action.types.js","components/board/cell.js","components/board/row.js","components/home.js","actions/home.action.js","containers/home.container.js","algorithm/main.js","containers/app.js","reducers/index.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","Component","types","pieces","Cell","state","class_css_o","class_css_x","class_css_normal","this","props","data","row","col","tick","pieces_win","my_class_css","i","length","concat","onClick","Row","elements","map","e","index","Home","numbercell","show","isLogin","usernameA","passwordA","usernameB","passwordB","setNumberCell","array_board","piece_current","is_win","reset_map","onSubmit","event","preventDefault","value","checkLogin","console","log","setState","alert","id","ref","input","placeholder","required","min","max","onChange","target","onKeyPress","key","Number","isInteger","parseInt","date","Date","now","set_number_cell","number_cell","init_array","array_new","switch_piece","HomeContainer","count","actions","count_tmp","board","turn","piece_win","push","row_index","col_index","isWin","Array","fill","numberCell","connect","main","dispatch","bindActionCreators","home_actions","App","BrowserRouter","Route","exact","path","component","inital_state","combineReducers","action","middleware","thunk","store","createStore","reducers","applyMiddleware","render","document","getElementById"],"mappings":"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","file":"static/js/main.5765a094.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-faded\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#nav-content\"\n          aria-controls=\"nav-content\"\n          aria-expanded=\"true\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <a className=\"navbar-brand\" href=\"http://localhost:3000/\">\n          CỜ CARO - ALPHA TEAM | PHẦN MỀM NGUỒN MỞ ĐÀ NẴNG 2019\n        </a>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","export const types = {\n    SET_NUMBER_CELL: \"SET_NUMBER_CELL\",\n    INIT_ARRAY: 'INIT_ARRAY',\n    TICK: 'TICK',\n    SWITCH_PIECE: \"SWITCH_PIECE\"\n}\n\nexport const pieces = {\n    X: \"X\",\n    O: \"O\"\n}\n","import React, { Component } from \"react\";\nimport { pieces } from \"../../constants/action.types\";\nclass Cell extends Component {\n  constructor() {\n    super();\n    this.state = {\n      class_css_o: \"not-focusable btn btn-default btnO btn-piece\",\n      class_css_x: \"not-focusable btn btn-default btnX btn-piece\",\n      class_css_normal: \"not-focusable btn btn-default btn-piece\"\n    };\n  }\n  render() {\n    const { data, row, col, tick, pieces_win } = this.props;\n    const { class_css_normal, class_css_o, class_css_x } = this.state;\n    let my_class_css =\n      data == pieces.O\n        ? class_css_o\n        : data == pieces.X\n        ? class_css_x\n        : class_css_normal;\n    if (pieces_win != null) {\n      for (var i = 0; i < pieces_win.length; i++) {\n        if (pieces_win[i][0] == row && pieces_win[i][1] == col)\n          my_class_css = my_class_css.concat(\" btn-win\");\n      }\n    }\n\n    return (\n      <button\n        className={my_class_css}\n        onClick={() => {\n          if (data == null) tick(row, col);\n        }}\n      >\n        {data}\n      </button>\n    );\n  }\n}\nexport default Cell;\n","import React, { Component } from \"react\";\nimport Cell from \"./cell\";\nclass Row extends Component {\n  render() {\n    const { elements, row, tick, pieces_win } = this.props;\n    const cells = elements.map((e, index) => (\n      <Cell\n        data={e}\n        row={row}\n        col={index}\n        tick={(row, col) => tick(row, col)}\n        pieces_win={pieces_win}\n      />\n    ));\n    return cells;\n  }\n}\n\nexport default Row;\n","import React, { Component } from \"react\";\nimport Header from \"./commom/header\";\nimport Row from \"./board/row\";\nimport Countdown from \"react-countdown-now\";\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numbercell: null,\n      show: false,\n      isLogin: false\n    };\n  }\n\n  checkLogin(usernameA, passwordA, usernameB, passwordB) {\n    if (\n      usernameA == \"khoilq\" &&\n      passwordA == \"123456\" &&\n      usernameB == \"phongnc\" &&\n      passwordB == \"123456\"\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const {\n      setNumberCell,\n      array_board,\n      tick,\n      piece_current,\n      is_win,\n      pieces_win,\n      reset_map\n    } = this.props;\n    var usernameA = null,\n      passwordA = null,\n      eloA = null,\n      isLogA = false,\n      usernameB = null,\n      passwordB = null,\n      eloB = null,\n      isLogB = false;\n    return (\n      <div>\n        <div className=\"container\">\n          <Header />\n          {this.state.isLogin == false ? (\n            <form\n              onSubmit={event => {\n                event.preventDefault();\n                usernameA = this.usernameA.value;\n                passwordA = this.passwordA.value;\n                usernameB = this.usernameB.value;\n                passwordB = this.passwordB.value;\n                if (\n                  this.checkLogin(usernameA, passwordA, usernameB, passwordB) ==\n                  true\n                ) {\n                  eloA = 168;\n                  eloB = 173;\n                  console.log(\"login ok\");\n                  this.setState({ isLogin: true });\n                  // window.location.reload();\n                } else {\n                  alert(\"Username or Password is incorrect\");\n                }\n                // console.log(\"Login: \", usernameA, \":\", passwordA);\n              }}\n            >\n              <p>Đăng nhập người chơi X</p>\n              <div className=\"form-group mr-sm-2\">\n                <input\n                  id=\"usernameA\"\n                  type=\"text\"\n                  ref={input => {\n                    this.usernameA = input;\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Tên đăng nhập\"\n                  required\n                />\n              </div>\n              <div className=\"form-group mr-sm-2\">\n                <input\n                  id=\"passwordA\"\n                  type=\"password\"\n                  ref={input => {\n                    this.passwordA = input;\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Mật khẩu\"\n                  required\n                />\n              </div>\n\n              <p>Đăng nhập người chơi O</p>\n              <div className=\"form-group mr-sm-2\">\n                <input\n                  id=\"usernameB\"\n                  type=\"text\"\n                  ref={input => {\n                    this.usernameB = input;\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Tên đăng nhập\"\n                  required\n                />\n              </div>\n              <div className=\"form-group mr-sm-2\">\n                <input\n                  id=\"passwordB\"\n                  type=\"password\"\n                  ref={input => {\n                    this.passwordB = input;\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Mật khẩu\"\n                  required\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Login\n              </button>\n            </form>\n          ) : array_board == null ? (\n            <div className=\"input-custom\">\n              <input\n                type=\"number\"\n                placeholder=\"Độ khó\"\n                min=\"5\"\n                max=\"100\"\n                required\n                onChange={event => {\n                  this.setState({ numbercell: event.target.value });\n                }}\n                onKeyPress={event => {\n                  if (event.key == \"Enter\") {\n                    if (\n                      this.state.numbercell == null ||\n                      (!Number.isInteger(this.state.numbercell) &&\n                        (parseInt(this.state.numbercell) < 5 ||\n                          parseInt(this.state.numbercell) > 100))\n                    ) {\n                      alert(\"Vui lòng chọn độ khó trong khoảng 5 - 100\");\n                      return;\n                    }\n                    setNumberCell(this.state.numbercell);\n                  }\n                }}\n              />\n            </div>\n          ) : (\n            <div className=\"row board\">\n              <div className=\"col-md-10\">\n                {array_board.map((e, index) => (\n                  <div>\n                    <Row\n                      elements={e}\n                      tick={(row, col) => tick(row, col)}\n                      row={index}\n                      pieces_win={pieces_win}\n                    />\n                  </div>\n                ))}\n              </div>\n              <div className=\"col-md-2 information\">\n                <p className=\"title\">THÔNG TIN</p>\n                <p>\n                  Còn lại: <Countdown date={Date.now() + 10000} />\n                </p>\n                <p>Đến lượt: {piece_current}</p>\n\n                <p>\n                  {\" \"}\n                  Trạng thái :{\" \"}\n                  {is_win == 1 ? (\n                    <span>{piece_current} thắng</span>\n                  ) : is_win == 0 ? (\n                    <span>Hoà</span>\n                  ) : (\n                    <span>Đang chơi</span>\n                  )}\n                </p>\n                <b>Người chơi X</b>\n                <p>Tên đăng nhập: </p>\n                <p>Elo: </p>\n                <b>Người chơi O</b>\n                <p>Tên đăng nhập: </p>\n                <p>Elo: </p>\n\n                <button onClick={() => reset_map()} className=\"btn btn-info\">\n                  Chơi lại\n                </button>\n                <button className=\"btn btn-info\">Lưu trạng thái</button>\n                <button className=\"btn btn-info\">Khôi phục lượt chơi</button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import { types, pieces } from \"../constants/action.types\";\n\nexport const set_number_cell = number_cell => ({\n    type: types.SET_NUMBER_CELL,\n    number_cell\n})\n\nexport const init_array = array_board => ({\n    type: types.INIT_ARRAY,\n    array_board\n})\n\nexport const tick =  (array_new) => ({\n    type: types.TICK,\n    array_new\n})\n\nexport const switch_piece = (data) => ({\n    type: types.SWITCH_PIECE,\n    data\n})\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Home from \"../components/home\";\nimport * as home_actions from \"../actions/home.action\";\nimport { pieces } from \"../constants/action.types\";\nimport { isWin } from \"../algorithm/main\";\n\nclass HomeContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      is_win: -1,\n      pieces_win: null\n    };\n  }\n\n  tick(row, col) {\n    const { actions, array_board, piece_current, number_cell } = this.props;\n    if (this.state.is_win == 1) {\n      return;\n    }\n    // count number of tick \n    let count_tmp = this.state.count + 1;\n    this.setState({ count: count_tmp });\n\n    // update board \n    let array_new = [...array_board];\n    array_new[row][col] = piece_current;\n    actions.tick(array_new);\n\n    // check win \n    const pieces_win = isWin(array_new, row, col, piece_current);\n    if (pieces_win.length > 0) {\n      this.setState({ is_win: 1, pieces_win: pieces_win });\n    } else if (count_tmp ==  number_cell * number_cell) {\n      this.setState({ is_win: 0 });\n    } else {\n      // switch player\n      actions.switch_piece(piece_current == pieces.X ? pieces.O : pieces.X);\n    }\n  }\n\n  reset_map() {\n    this.props.actions.init_array(\n      Array(this.props.number_cell)\n        .fill(null)\n        .map(() => Array(this.props.number_cell).fill(null))\n    );\n    this.props.actions.switch_piece(pieces.X);\n    this.setState({\n      count: 0,\n      is_win: -1,\n      pieces_win: null\n    });\n  }\n\n  render() {\n    const { actions, array_board, piece_current } = this.props;\n    const { is_win, pieces_win } = this.state;\n    return (\n      <Home\n        setNumberCell={numberCell => {\n          const number_cell = parseInt(numberCell);\n          actions.set_number_cell(number_cell);\n          actions.init_array(\n            Array(number_cell)\n              .fill(null)\n              .map(() => Array(number_cell).fill(null))\n          );\n        }}\n        array_board={array_board}\n        tick={(row, col) => this.tick(row, col)}\n        piece_current={piece_current}\n        is_win={is_win}\n        pieces_win={pieces_win}\n        reset_map={() => this.reset_map()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  number_cell: state.main.number_cell,\n  array_board: state.main.array_board,\n  piece_current: state.main.piece_current\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: bindActionCreators(home_actions, dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeContainer);\n","import { pieces } from \"../constants/action.types\";\n// Func isWin will return array have length 5 when win and return array empty\nexport const isWin = (board, row, col, turn) => {\n  let piece_win = [];\n  // check col win\n  let index = col - 1;\n\n  while (index >= 0 && board[row][index] == turn) {\n    piece_win.push([row, index]);\n    index--;\n  }\n\n  index = col + 1;\n  while (index <= board.length - 1 && board[row][index] == turn) {\n    piece_win.push([row, index]);\n    index++;\n  }\n\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check row\n  index = row - 1;\n  piece_win = [];\n  while (index >= 0 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index--;\n  }\n\n  index = row + 1;\n  while (index >= 0 && index < board.length - 1 && board[index][col] == turn) {\n    piece_win.push([index, col]);\n    index++;\n  }\n\n  console.log(piece_win)\n\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n\n  // check diagonal left\n  let row_index = row - 1;\n  let col_index = col - 1;\n  piece_win = [];\n\n  while (\n    row_index >= 0 &&\n    col_index >= 0 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index--;\n  }\n\n  row_index = row + 1;\n  col_index = col + 1;\n  while (\n    row_index >= 0 &&\n    col_index >= 0 &&\n    row_index <= board.length - 1 &&\n    col_index <= board.length - 1 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index++;\n  }\n\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  // check diagonal left\n  row_index = row - 1;\n  col_index = col + 1;\n  piece_win = [];\n  while (\n    col_index >= 0 &&\n    row_index >=0 &&\n    col_index <= board.length - 1 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index--;\n    col_index++;\n  }\n  row_index = row + 1;\n  col_index = col - 1;\n  while (\n    row_index >= 0 &&\n    row_index <= board.length - 1 &&\n    col_index >= 0 &&\n    board[row_index][col_index] == turn\n  ) {\n    piece_win.push([row_index, col_index]);\n    row_index++;\n    col_index--;\n  }\n\n  if (piece_win.length >= 4) {\n    piece_win.push([row, col]);\n    return piece_win;\n  }\n  return [];\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport HomeContainer from \"./home.container\";\nconst App = () => (\n  <BrowserRouter>\n    <switch>\n      <Route exact path=\"/\" component={HomeContainer} />\n    </switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { types, pieces } from \"../constants/action.types\";\n\nconst inital_state = {\n  number_cell: null,\n  array_board: null,\n  piece_current: pieces.X\n};\nconst main = (state = inital_state, action) => {\n  switch (action.type) {\n    case types.SET_NUMBER_CELL: {\n      return { ...state, number_cell: parseInt(action.number_cell) };\n    }\n    case types.INIT_ARRAY: {\n      return { ...state, array_board: action.array_board };\n    }\n    case types.SWITCH_PIECE: {\n      return { ...state, piece_current: action.data };\n    }\n    case types.TICK: {\n      return {...state, array_board: action.array_new}\n    }\n    default:\n      return state;\n  }\n};\nexport default combineReducers({ main });\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./containers/app\";\nimport reducers from \"./reducers\";\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(reducers, applyMiddleware(...middleware));\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}